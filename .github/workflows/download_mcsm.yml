name: Download and Release MCSManager

on:
  schedule:
    - cron: '0 0 * * *'  # 每日 UTC 0 点执行
  workflow_dispatch:  # 允许手动触发

jobs:
  download-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GITHUB_TOKEN，确保在仓库设置中已启用 workflows 权限
      
      - name: Download MCSManager
        run: |
          echo "正在下载 MCSManager 最新 Linux 版本..."
          wget -O mcsmanager_linux_release.tar.gz https://github.com/MCSManager/MCSManager/releases/latest/download/mcsmanager_linux_release.tar.gz
          
      - name: Extract MCSManager
        run: |
          echo "正在解压..."
          tar -zxf mcsmanager_linux_release.tar.gz
          
      - name: Remove source file
        run: |
          echo "正在删除源文件..."
          rm mcsmanager_linux_release.tar.gz
          
      - name: Copy lib files
        run: |
          echo "正在复制 lib 文件..."
          mkdir -p mcsmanager/daemon/lib
          cp lib/file_zip_linux_arm mcsmanager/daemon/lib/
          cp lib/pty_linux_arm mcsmanager/daemon/lib/
          
      - name: Compress MCSManager
        run: |
          echo "正在压缩 MCSManager..."
          tar -czf mcsmanager_armv7l_release.tar.gz mcsmanager
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mcsmanager_armv7l_release.tar.gz
          asset_name: mcsmanager_armv7l_release.tar.gz
          asset_content_type: application/gzip
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Auto download, extract and remove MCSManager source file"
          git push
